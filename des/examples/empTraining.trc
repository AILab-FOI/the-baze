%
% Understanding Relational Database Query Languages, S. W. Dietrich, Prentice Hall, 2001.
%
% -------------------------------------------------------------------------------------------------------------------------------
% 	      TUPLE RELATIONAL CALCULUS
% -------------------------------------------------------------------------------------------------------------------------------
%                        EMPLOYEE TRAINING Enterprise
%
%  employee(eID, eLast, eFirst, eTitle, eSalary)	key: eID
%  technologyArea(aID, aTitle, aURL, aLeadID)	    key: aID      foreign key (aLeadID) references employee(eID)
%  trainingCourse(cID, cTitle, cHours, areaID)	  key: cID      foreign key (areaID) references technologyArea(aID)
%  takes(eID, cID, tYear, tMonth, tDay)	          key: eID, cID foreign key (eID) references employee(eID)
%                                                               foreign key (cID) references trainingCourse(cID)
%--------------------------------------------------------------------------------------------------------------------------------
%

/multiline on
/abolish
/show_compilations on

create table employee (eID string primary key, eLast string, eFirst string, eTitle string, eSalary int);
create table technologyArea(aID string primary key, aTitle string, aURL string, aLeadID string, foreign key (aLeadID) references employee(eID));
create table trainingCourse(cID string primary key, cTitle string, cHours int, areaID string, foreign key (areaID) references technologyArea(aID));
create table takes(eID string, cID string, tYear int, tMonth int, tDay int, primary key (eID, cID), foreign key (eID) references employee(eID), foreign key (cID) references trainingCourse(cID));

insert into employee values ('111','Last111','First111','Database Administrator',75111);
insert into employee values ('222','Last222','First222','Software Engineer',51722);
insert into employee values ('321','Last321','First321','Database Administrator',68321);
insert into employee values ('333','Last333','First333','Sr Software Engineer',60333);
insert into employee values ('345','Last345','First345','Sr Software Engineer',59345);
insert into employee values ('369','Last369','First369','Software Engineer',36369);
insert into employee values ('444','Last444','First444','Software Engineer',44444);
insert into employee values ('456','Last456','First456','Software Engineer',45456);
insert into employee values ('555','Last555','First555','Sr Software Engineer',55555);
insert into employee values ('654','Last654','First654','Coach',60654);
insert into employee values ('666','Last666','First666','Coach',66666);
insert into employee values ('678','Last678','First678','Coach',67678);
insert into employee values ('693','Last693','First693','Coach',69693);
insert into employee values ('777','Last777','First777','Database Administrator',77777);
insert into employee values ('789','Last789','First789','Database Administrator',78789);
insert into employee values ('888','Last888','First888','Database Administrator',88888);
insert into employee values ('963','Last963','First963','Manager',98963);
insert into employee values ('987','Last987','First987','Manager',99987);
insert into employee values ('999','Last999','First999','Manager',100999);

insert into technologyArea values ('DB','Database','http://www.company.intranet/technology/db','321');
insert into technologyArea values ('JA','Java','http://www.company.intranet/technology/java','333');
insert into technologyArea values ('SE','Software Engineering','http://www.company.intranet/technology/software','345');
insert into technologyArea values ('WW','Web','http://www.company.intranet/technology/web','369');

insert into trainingCourse values ('DB01','Microsoft Access',8,'DB');
insert into trainingCourse values ('DB02','Query Languages',16,'DB');
insert into trainingCourse values ('DB03','Database Modeling',8,'DB');
insert into trainingCourse values ('DB04','Transactions',8,'DB');
insert into trainingCourse values ('JA01','Introduction to Java',8,'JA');
insert into trainingCourse values ('JA02','JavaBeans',16,'JA');
insert into trainingCourse values ('JA03','Enterprise JavaBeans',32,'JA');
insert into trainingCourse values ('JA04','JDBC',8,'JA');
insert into trainingCourse values ('SE01','Patterns',16,'SE');
insert into trainingCourse values ('SE02','Validation & Verification',32,'SE');
insert into trainingCourse values ('SE03','Software Components',40,'SE');
insert into trainingCourse values ('WW01','Dynamic HTML',8,'WW');
insert into trainingCourse values ('WW02','XML',16,'WW');
insert into trainingCourse values ('WW03','XSLT',24,'WW');

insert into takes values ('321','JA01',2000,7,24);
insert into takes values ('333','JA04',2000,7,27);
insert into takes values ('333','SE01',2000,6,1);
insert into takes values ('345','SE01',2000,6,1);
insert into takes values ('345','SE02',2000,6,2);
insert into takes values ('345','WW01',2000,8,1);
insert into takes values ('369','JA04',2000,7,27);
insert into takes values ('369','WW01',2000,8,1);
insert into takes values ('369','WW02',2000,8,2);
insert into takes values ('369','WW03',2000,8,3);
insert into takes values ('444','DB01',2000,5,1);
insert into takes values ('444','DB02',2000,9,15);
insert into takes values ('456','JA01',2001,1,15);
insert into takes values ('456','WW01',2001,3,1);
insert into takes values ('555','DB03',2000,9,22);
insert into takes values ('666','JA01',2000,1,1);
insert into takes values ('678','JA01',2000,1,1);
insert into takes values ('678','JA02',2000,1,2);
insert into takes values ('693','JA01',2000,7,24);
insert into takes values ('693','JA02',2000,1,2);
insert into takes values ('693','JA03',2000,12,12);
insert into takes values ('693','JA04',2000,12,4);
insert into takes values ('777','DB01',2000,5,1);
insert into takes values ('777','DB02',2000,9,15);
insert into takes values ('777','DB03',2000,9,22);
insert into takes values ('777','DB04',2000,9,29);
insert into takes values ('789','WW01',2001,3,1);
insert into takes values ('888','DB01',2000,5,1);
insert into takes values ('888','JA01',2000,7,24);
insert into takes values ('888','SE01',2000,6,1);
insert into takes values ('888','WW01',2000,8,1);
insert into takes values ('987','JA01',2000,7,24);
insert into takes values ('999','DB01',2000,5,1);
insert into takes values ('999','SE01',2000,6,1);

% TRC: Fundamental EMPLOYEE TRAINING Queries
qSelection := 
    { E | employee(E) and E.eSalary > 100000 }; 

qProjection :=
    { E.eLast, E.eFirst, E.eTitle | employee(E)};


managers := 
    { E.eID | employee(E) and E.eTitle='Manager' }; 
coaches := 
    { E.eID | employee(E) and E.eTitle='Coach' }; 
qUnion :=
    { T | managers(T) or coaches(T) };

% Alternative for qUnion: one step
qUnionA :=
    { E.eID | employee(E) and (E.eTitle = 'Manager' or E.eTitle = 'Coach') };

% managers := { E.eID | employee(E) and E.eTitle='Manager' }; 
takenCourse := 
    { T.eID | takes(T)  }; 
qDifference :=
    { T | managers(T) and not takenCourse(T) };

%Alternative for qDifference: one step
qDifferenceA :=
    { E.eID | employee(E) and E.eTitle='Manager' and  
	not (exists T) (takes(T) and T.eID=E.eID) };

qProduct :=
    { E.eID, C.cID | employee(E) and trainingCourse(C) };

% TRC: Additional EMPLOYEE TRAINING Queries

% managers := { E.eID | employee(E) and E.eTitle='Manager' };
% takenCourse := { T.eID | takes(T) };  
qIntersection :=
    { T | managers(T) and takenCourse(T)  };

% Alternative for qIntersection: one step
qIntersectionA :=
    { E.eID | employee(E) and E.eTitle='Manager' and  
	(exists T) (takes(T) and T.eID=E.eID) };
qJoin :=
    { E, A | employee(E) and  technologyArea(A) and E.eID=A.aLeadID };

qNaturalJoin :=
    { C.cTitle, T.tYear, T.tMonth, T.tDay | 
	trainingCourse(C) and takes(T) and C.cID=T.cID  };

% Division: see query Q6 below (see also the separate ABSTRACT DIVISION enterprise)

% TRC: Safety Example

leads :=
    { E.eID | employee(E) and (exists A)(technologyArea(A) and A.aLeadID=E.eID) };

qSafety :=
    { E | employee(E) and not (exists L) (leads(L) and L.eID=E.eID)};

% TRC: Example EMPLOYEE TRAINING Queries

% Q1: What training courses are offered in the `Database' technology area?
%     (cID, cTitle, cHours)

dbCourse :=
   { T.cID, T.cTitle, T.cHours | trainingCourse(T) and (exists A) 
      (technologyArea(A) and A.aID = T.areaID and A.aTitle = 'Database') }; 

% Q2: Which employees have taken a training course offered in the 
%     'Database' technology area?
%     (eID, eLast, eFirst, eTitle)

dbEmployee :=
{ E.eID, E.eLast, E.eFirst, E.eTitle | employee(E) and  
   (exists T,D) (takes(T) and dbCourse(D) and T.eID=E.eID and T.cID=D.cID) };

% Q3: Which employees have not taken any training courses?
%     (eID, eLast, eFirst, eTitle)

q3 :=
    { E.eID, E.eLast, E.eFirst, E.eTitle | employee(E) and  
   not (exists T) (takes(T) and T.eID=E.eID)  };

% Q4: Which employees took courses in more than one technology area?  
%     (eID, eLast, eFirst, eTitle)

q4 :=
    { E.eID, E.eLast, E.eFirst, E.eTitle| employee(E) and 
	(exists T1,T2,C1,C2) 
	   (takes(T1) and T1.eID=E.eID and  
	    takes(T2) and  T2.eID=E.eID and  
	    trainingCourse(C1) and T1.cID=C1.cID and 
	    trainingCourse(C2) and T2.cID=C2.cID and 
	    C1.areaID  <>  C2.areaID) }; 

% Q5: Which employees have the minimum salary?
%     (eID, eLast, eFirst, eTitle, eSalary)

q5 :=
    { E | employee(E) and  
	  not (exists S) (employee(S) and S.eSalary  <  E.eSalary) }; 

% Q6: Which employees took all of the training courses offered 
%     in the `Database' technology area?  
%     (eID, eLast, eFirst, eTitle)

q6 :=
    { E.eID, E.eLast, E.eFirst, E.eTitle | employee(E) and 
	(exists B)(dbEmployee(B) and B.eID=E.eID) and
	not (exists D)(dbCourse(D) and  
	    not (exists T) (takes(T) and T.eID=E.eID and T.cID=D.cID) )  }; 

%-----------------------------------------End EMPLOYEE TRAINING Enterprise--------------------------------------

select * from qSelection;
select * from qProjection;
select * from managers;
select * from coaches;
select * from qUnion;
select * from qUnionA;
select * from takenCourse;
select * from qDifference;
select * from qDifferenceA;
select * from qProduct;
select * from qIntersection;
select * from qIntersectionA;
select * from qJoin;
select * from qNaturalJoin;
select * from leads;
select * from qSafety;
select * from dbCourse;
select * from dbEmployee;
select * from q3;
select * from q4;
select * from q5;
select * from q6;
