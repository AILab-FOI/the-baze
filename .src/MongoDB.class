' Gambas class file

Inherits DBaze

' MongoDB host
Public host As String
' MongoDB port
Public port As String
' MongoDB engine
Public con As MongoEngine
' Database name
Public dbname As String
' Authentication database
Public authDbname As String
' Server name
Public username As String
' User's password
Private password As String
' JSON object of encoding/decoding
Public js As New JSON
' URL object for encoding/decoding
Public enc As New URL

Public Sub _new(host_ As String, port_ As String, dbname_ As String, authDbname_ As String, username_ As String, password_ As String, store_password_ As Boolean)
  Me.host = host_
  Me.port = port_
  Me.dbname = dbname_
  Me.authDbname = authDbname_
  Me.username = username_
  Me.password = password_
  Me.store_password = store_password_
  
  'base_url = Me.rest_host & ":" & Me.rest_port
  
  Me.connection_settings["connection type"] = "MongoDB"
  Me.connection_settings["host"] = host_
  Me.connection_settings["port"] = port_
  Me.connection_settings["dbname"] = dbname_
  Me.connection_settings["authentication dbname"] = authDbname_
  Me.connection_settings["username"] = username_
  If Me.store_password Then
    Me.connection_settings["password"] = password_
  Endif
End


Public Sub connect(Optional caller As Object = Null) As Boolean
  ' connect to MongoDB and initialize the MongoDB engine
  Try Me.con = New MongoEngine(Me.host, Me.port, Me.dbname, Me.authDbname, Me.username, Me.password)
  If Error Then
    Error.Propagate()
  Endif
  Return True
End

Public Sub close()
  ' close the connection to MongoDB database
  Me.con.close()
End


Public Sub initialize_gui()
  ' initialize the GUI for MongoDB database
  Dim documentation As New WebView(FMain.main_tabstrip)
  Dim data_definition As FormMongoDataDefinition
  Dim data_manipulation As FormMongoDataManipulation
  Dim data_querying As FormMongoDataQuerying
  
  ' create a dummy tab 
  FMain.main_tabstrip.Text = "MongoDB Database - " & Me.host & ":" & Me.port & " - " & Me.username
  documentation.Frame.Url = "https://docs.mongodb.com/"
  
  ' create the treeview
  ' first get objects from the database
  refresh_db_tree()
  
  ' create the tool panel
  data_definition = New FormMongoDataDefinition(FMain.main_toolpanel)
  FMain.main_toolpanel.Index = 1
  data_manipulation = New FormMongoDataManipulation(FMain.main_toolpanel)
  FMain.main_toolpanel.Index = 2
  data_querying = New FormMongoDataQuerying(FMain.main_toolpanel)
  
  ' show the data definition tab
  FMain.main_toolpanel.Index = 0
  
End

Public Sub refresh_db_tree()
  ' refresh the database tree
  ' refresh the main tree view
  Dim collections As String[]
  Dim o As String
  FMain.main_treeview.Clear
  collections = get_db_objects()
  FMain.main_treeview.Add("Collections", "Collections", Picture.Load("images/directory.png"))
  If collections Then
    For Each o In collections
      FMain.main_treeview.Add(o, o, Picture.Load("images/table.png"), "Collections")
    Next
  Endif
  ' create Baze object containers
  With FMain.main_treeview
    .Add("Queries", "Queries", Picture.Load("images/directory.png"))
    .Add("Insert queries", "Insert queries", Picture.Load("images/directory.png"), "Queries")
    For Each o In Me.dbobjects["queries"]["insert queries"]
      .Add(Me.dbobjects["queries"]["insert queries"].key, Me.dbobjects["queries"]["insert queries"].key, Picture.Load("images/query.png"), "Insert queries")
    Next
    .Add("Update queries", "Update queries", Picture.Load("images/directory.png"), "Queries")
    For Each o In Me.dbobjects["queries"]["update queries"]
      .Add(Me.dbobjects["queries"]["update queries"].key, Me.dbobjects["queries"]["update queries"].key, Picture.Load("images/query.png"), "Update queries")
    Next
    .Add("Delete queries", "Delete queries", Picture.Load("images/directory.png"), "Queries")
    For Each o In Me.dbobjects["queries"]["delete queries"]
      .Add(Me.dbobjects["queries"]["delete queries"].key, Me.dbobjects["queries"]["delete queries"].key, Picture.Load("images/query.png"), "Delete queries")
    Next
    .Add("Find queries", "Find queries", Picture.Load("images/directory.png"), "Queries")
    For Each o In Me.dbobjects["queries"]["find queries"]
      .Add(Me.dbobjects["queries"]["find queries"].key, Me.dbobjects["queries"]["find queries"].key, Picture.Load("images/query.png"), "Find queries")
    Next
    .Add("Forms", "Forms", Picture.Load("images/directory.png"))
    For Each o In Me.dbobjects["forms"]
      .Add(o, o, Picture.Load("images/query.png"), "Forms")
    Next
    .Add("Scripts", "Scripts", Picture.Load("images/directory.png"))
    .Add("Python", "Python", Picture.Load("images/directory.png"), "Scripts")
    .Add("R", "R", Picture.Load("images/directory.png"), "Scripts")
    .Add("NodeJS", "NodeJS", Picture.Load("images/directory.png"), "Scripts")
    For Each o In Me.dbobjects["scripts"]["python"]
      .Add(Me.dbobjects["scripts"]["python"].key, Me.dbobjects["scripts"]["python"].key, Picture.Load("images/module.png"), "Python")
    Next
    For Each o In Me.dbobjects["scripts"]["r"]
      .Add(Me.dbobjects["scripts"]["r"].key, Me.dbobjects["scripts"]["r"].key, Picture.Load("images/module.png"), "R")
    Next
    For Each o In Me.dbobjects["scripts"]["nodejs"]
      .Add(Me.dbobjects["scripts"]["nodejs"].key, Me.dbobjects["scripts"]["nodejs"].key, Picture.Load("images/module.png"), "NodeJS")
    Next
    .Add("Reports", "Reports", Picture.Load("images/directory.png"))
    For Each o In Me.dbobjects["reports"]
      .Add(o, o, Picture.Load("images/query.png"), "Reports")
    Next
  End With
End

Public Sub executeCommandAndParseJsonResult(command As String) As Collection
  ' execute command in running Mongo shell
  Dim result As Collection
  Dim res As String
  res = con.execute(command)
  result = js.Decode(res)
  If result["ok"] = 1 Then
    Return result
  Endif
  Error.Raise(result["errmsg"])
End

Public Sub get_db_objects() As String[]
  ' get all objects in MongoDB
  Dim result As String[]
  Try result = Split(con.execute("show collections"), "\n", "", True)
  If Error Then Message.Error(Error.Text)
  Return result
End

